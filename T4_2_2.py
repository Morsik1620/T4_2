#2. Анализ сложности

#Временная сложность: O(log n). При каждой итерации алгоритм делит область поиска пополам. Поэтому количество итераций пропорционально логарифму размера списка.
#Пространственная сложность: O(1). Бинарный поиск выполняется “на месте” (in-place), то есть не требует дополнительной памяти, размер которой зависел бы от размера входных данных. Мы используем только несколько переменных (low, high, mid), которые занимают константное количество памяти.
#Выводы:
#
#Бинарный поиск невероятно эффективен для поиска в отсортированных списках, особенно когда список большой. Логарифмическая временная сложность означает, что время поиска увеличивается очень медленно с ростом размера списка.
#Пространственная сложность O(1) делает бинарный поиск очень экономичным с точки зрения использования памяти.